FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Hammer API
Hammer API

# Group Jobs
Notes related resources of the **Jobs API**

## Jobs Collection [/jobs]
### List all Jobs [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "name": "googlejob",
                    "schedule": "2014-11-11T08:40:51.620Z",
                    "filters": [
                        {
                            "name": "CarriersInc",
                            "value": "BA,DL",
                        }
                    ]
                }
            ]                
                
### Create a new Job [POST]

+ Request (application/json)

            {
                "name": "googlejob",
                "schedule": "2014-11-11T08:40:51.620Z",
                "filters": [
                    {
                        "name": "CarriersInc",
                        "value": "BA,DL",
                    }
                ]
            }

+ Response 201 (application/json)

    + Body
    
        { "name" : "googlejob" }

## Job [/notes/{id}]





A single Note object with all its details

+ Parameters
    + id (required, number, `googlejob`) ... Unique Job Id

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }
            


### Remove a Note [DELETE]
+ Response 204






## Group Jobs
A job contains the following information
+ names
+ schedule
+ filters

## Create, Retrieve, Update, Delete [/jobs
Some information

+ Parameters
    + job_id (optional, string, `google`) ... Unique job id

### Update [POST]

+ Response 200 (application/json)

                {
                    "name": "googlejob",
                    "schedule": "2014-11-11T08:40:51.620Z",
                    "filters": [
                        {
                            "name": "CarriersInc",
                            "value": "BA,DL",
                        }
                    ]
                }

### Retrieve [GET]

+ Response 200 (application/json)

                {
                    "name": "googlejob",
                    "schedule": "2014-11-11T08:40:51.620Z",
                    "filters": [
                        {
                            "name": "CarriersInc",
                            "value": "BA,DL",
                        }
                    ]
                }
                
## Group /jobs/list
## List [/jobs/list]
### List [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "name": "googlejob",
                    "schedule": "2014-11-11T08:40:51.620Z",
                    "filters": [
                        {
                            "name": "CarriersInc",
                            "value": "BA,DL",
                        }
                    ]
                }
            ]                
                

## Choice [/questions/{question_id}/choices/{choice_id}]

+ Parameters
    + question_id (required, number, `1`) ... ID of the Question in form of an integer
    + choice_id (required, number, `1`) ... ID of the Choice in form of an integer

### Vote on a Choice [POST]

This action allows you to vote on a question's choice.

+ Response 201

    + Headers

            Location: /questions/1

## Questions Collection [/questions{?page}]

+ Parameters
    + page (optional, number, `1`) ... The page of questions to return



### Create a New Question [POST]

You may create your own question using this action. It takes a JSON object containing a question and a collection of answers in the form of choices.

+ question (string) - The question
+ choices (array[string]) - A collection of choices.

+ Request (application/json)

            {
                "question": "Favourite programming language?",
                "choices": [
                    "Swift",
                    "Python",
                    "Objective-C",
                    "Ruby"
                ]
            }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/2",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/2/choices/1",
                            "votes": 0
                        }, {
                            "choice": "Python",
                            "url": "/questions/2/choices/2",
                            "votes": 0
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/2/choices/3",
                            "votes": 0
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/2/choices/4",
                            "votes": 0
                        }
                    ]
                }